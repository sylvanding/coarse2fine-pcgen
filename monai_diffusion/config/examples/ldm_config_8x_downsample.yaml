# MONAI 3D Latent Diffusion Model 配置示例
# 8倍下采样配置 - 推荐用于256x256x64分辨率

# 数据配置
data:
  train_data_dir: "/repos/datasets/batch_simulation_microtubule_20251017_2048_nifti/train"
  val_data_dir: "/repos/datasets/batch_simulation_microtubule_20251017_2048_nifti/val"
  
  # 高分辨率体素
  voxel_size: [256, 256, 64]  # [X, Y, Z]
  
  cache_rate: 0
  num_workers: 2
  pin_memory: true
  
  augmentation:
    enabled: true
    random_flip_prob: 0.5

# AutoencoderKL 配置 - 8倍下采样
autoencoder:
  spatial_dims: 3
  in_channels: 1
  out_channels: 1
  
  # 使用较小的通道数以节省显存
  num_channels: [16, 32, 64]
  
  # ⭐ 关键配置: 8倍总下采样 (4×2=8)
  # 输入256×256×64 → Latent 32×32×8
  downsample_factors: [4, 2]
  
  latent_channels: 3
  num_res_blocks: 1
  norm_num_groups: 16
  
  # 只在最后一层使用注意力
  attention_levels: [false, false, true]
  
  training:
    n_epochs: 500
    batch_size: 1  # 高分辨率建议batch_size=1
    learning_rate: 1.0e-4
    
    # 损失权重
    adv_weight: 0.01
    perceptual_weight: 0.001
    kl_weight: 1.0e-6
    
    # 显存优化 - 全部启用
    use_perceptual_loss: false  # 禁用感知损失以节省显存
    use_gradient_checkpointing: false
    gradient_accumulation_steps: 4  # 梯度累积模拟batch_size=4
    
    autoencoder_warm_up_n_epochs: 5
    
    discriminator:
      num_layers_d: 3
      num_channels: 32
    
    val_interval: 10
    save_interval: 50
    
    fast_dev_run: false
    fast_dev_run_batches: 2
    
  checkpoints:
    output_dir: "outputs/ckpt/autoencoder_8x"
    save_best: true
    resume_from: null
  
  logging:
    log_dir: "outputs/logs/autoencoder_8x"
    log_interval: 50
    visualize_interval: 10
    num_visualize_samples: 4

# Diffusion Model 配置
diffusion:
  spatial_dims: 3
  in_channels: 3
  out_channels: 3
  
  # Diffusion在latent空间工作 (32×32×8)
  num_channels: [32, 64, 64]
  attention_levels: [false, true, true]
  num_head_channels: [0, 64, 64]
  num_res_blocks: 1
  
  scheduler:
    num_train_timesteps: 1000
    schedule: "scaled_linear_beta"
    beta_start: 0.0015
    beta_end: 0.0195
  
  training:
    n_epochs: 500
    batch_size: 2
    learning_rate: 1.0e-4
    
    val_interval: 10
    save_interval: 50
    
    generate_samples_interval: 10
    num_samples_to_generate: 4
    
    fast_dev_run: false
    fast_dev_run_batches: 2
  
  checkpoints:
    autoencoder_path: "outputs/ckpt/autoencoder_8x/best_model.pt"
    output_dir: "outputs/ckpt/diffusion_8x"
    save_best: true
    resume_from: null
  
  logging:
    log_dir: "outputs/logs/diffusion_8x"
    log_interval: 20
    visualize_interval: 10
    num_visualize_samples: 4

# 采样配置
sampling:
  num_inference_steps: 1000
  num_samples: 16
  
  output_dir: "outputs/samples/diffusion_8x"
  save_format: "nifti"
  
  pointcloud:
    num_points: 100000
    threshold: 0.1
    method: "probabilistic"

# 设备配置
device:
  use_cuda: true
  gpu_id: 0
  mixed_precision: true  # ⭐ 强烈推荐启用

seed: 42

